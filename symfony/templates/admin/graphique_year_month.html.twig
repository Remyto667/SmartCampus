{% extends 'basewithnavbar.html.twig' %}

{% block body %}

    <style>
        body{
            background-color: #f7f9fa;
        }

        h1{
            font-family: sans-serif;
            font-size: 40px;
            margin: 40px;
        }

        .graph{
            display: flex;
            flex-direction:column;
            justify-content: center ;
            align-items:center ;
            height: 500px;
            width :1000px
        }

        .btGraph
        {
            display: flex;
            justify-content: center;
            margin: 40px 10px;
        }

        .btn {
            color: #fff;
            background-color: #00489a;
            border-color: #00489a;
            text-decoration: none;
            display: inline-block;
            font-weight: 400;
            text-align: center;
            white-space: nowrap;
            vertical-align: middle;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            border-radius: 0.25rem;
            transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }

        .marginbtn{
            margin-left: 15px;
        }

    </style>
    <div class="container">

        <div class="graph" id="canvasWrapper" style=" ">

            <h1>{{ room.getName() }}</h1>

            <canvas id="ChartHum" width="2000" height="200"></canvas>
            <canvas id="ChartCo2" width="2000" height="200"></canvas>
            <canvas id="ChartTemp" width="2000" height="200"></canvas>


            <div class="btGraph">

                <div class="btn-group">
                    <a class="btn btn-primary blue" onclick="showChartData('annee')">Année</a>

                    <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    </button>
                    <div class="dropdown-menu">
                        {% for i in 0..4 %}
                            <a class="dropdown-item" href="/admin/suivi/graphique/{{ room.getId() }}/{{ year -i }}">{{ year -i }}</a>
                        {% endfor %}

                    </div>
                </div>

                <div class="btn-group">
                    <a class="btn btn-primary blue btn" onclick="showChartData('mois')">Mois</a>

                    <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    </button>
                    <div class="dropdown-menu">
                        {% for i in 1..12 %}
                            <a class="dropdown-item" href="/admin/suivi/graphique/{{ room.getId() }}/{{ annee_choisi }}/{{ i }}">{{ i }}</a>
                        {% endfor %}
                    </div>
                </div>


                <div class="btn-group">
                <a class="btn btn-primary blue">Jour</a>
                    <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    </button>
                    <div class="dropdown-menu">

                        {% if mois_choisi == mois %}

                            {% for i in 1..nb_jours-nb_jours_valide %}
                                <a class="dropdown-item" href="/admin/suivi/graphique/{{ room.getId() }}/{{ annee_choisi }}/{{ mois_choisi }}/{{ i }}">{{  i }}</a>
                            {% endfor %}

                        {% else %}

                            {% for i in 1..nb_jours %}
                                <a class="dropdown-item" href="/admin/suivi/graphique/{{ room.getId() }}/{{ annee_choisi }}/{{ mois_choisi }}/{{ i }}">{{  i }}</a>
                            {% endfor %}

                        {% endif %}

                    </div>
                </div>

            </div>
        </div>

    </div>





    <!-- Script pour créer le graphique -->
    <script>

        // Récupération du canvas
        var ctxTemp = document.getElementById('ChartTemp').getContext('2d');
        //const moisLabels=["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"];

        var labelsMonth = [];

        for(let i=1; i<= {{ nb_jours }};i++){

            labelsMonth.push(i.toString());
        }

        // Données du graphique
        var dataTemp = {
            labels: labelsMonth,
            datasets: [{
                label: 'Temperature 12 derniere mois',
                data: {{moyMonthTemp}},
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        };

        // Options du graphique
        var optionsTemp = {
            scales: {
                y: {
                    suggestedMax:40,
                    ticks: {
                        beginAtZero: true,
                        font:{
                            size:18
                        }
                    }
                },

                x: {
                    ticks:{
                        font:{
                            size:18
                        }
                    },
                    type: 'time',
                }
            }
        };

        // -------------------------------- Chart Humidite ---------------------------- //



        // Récupération du canvas
        var ctxHum = document.getElementById('ChartHum').getContext('2d');

        // Données du graphique
        var dataHum = {
            labels: labelsMonth,
            datasets: [{
                label: 'Humidite 12 derniere mois',
                data: {{ moyMonthHum }},
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        };

        // Options du graphique
        var optionsHum = {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        };

        // -------------------------------- Chart Co2 ---------------------------- //

        // Récupération du canvas
        var ctxCo2 = document.getElementById('ChartCo2').getContext('2d');

        // Données du graphique
        var dataCo2 = {
            labels: labelsMonth,
            datasets: [{
                label: 'Co2 12 derniere mois',
                data: {{ moyMonthCo2 }},
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        };

        // Options du graphique
        var optionsCo2 = {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]

            }
        };

        // Création du graphique

        var myChartCo2 = new Chart(ctxCo2, {
            type: 'line',
            data: dataCo2,
            options: optionsCo2
        });

        var myChartHum = new Chart(ctxTemp, {
            type: 'line',
            data: dataHum,
            options: optionsHum
        });

        var myChartTemp = new Chart(ctxHum, {
            type: 'line',
            data: dataTemp,
            options: optionsTemp
        });

        function showChartData(type){

            const anneeLabels=['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet','Aout','Septembre','Novembre','Octobre','Decembre'];
            const moisLabels=labelsMonth;

            const anneeTemp = {{moyYearTemp}};
            const anneeHum = {{ moyYearHum }};
            const anneeCo2 = {{ moyYearCo2 }};

            const moisTemp = {{ moyMonthTemp }};
            const moisHum = {{ moyMonthHum }};
            const moisCo2 = {{ moyMonthCo2 }};



            if(type === 'annee') {
                myChartTemp.data.datasets[0].data = anneeTemp;
                myChartTemp.data.labels = anneeLabels;
                myChartTemp.data.datasets[0].label = 'Temperature annee actuelle '
                myChartTemp.update();

                myChartHum.data.datasets[0].data = anneeHum;
                myChartHum.data.labels = anneeLabels;
                myChartHum.data.datasets[0].label = 'Humidite annee actuelle '
                myChartHum.update();

                myChartCo2.data.datasets[0].data = anneeCo2;
                myChartCo2.data.labels = anneeLabels;
                myChartCo2.data.datasets[0].label = 'Co2 annee actuelle '
                myChartCo2.update();
            }

            if(type === 'mois'){

                myChartTemp.data.datasets[0].data = moisTemp;
                myChartTemp.data.labels = moisLabels;
                myChartTemp.data.datasets[0].label = 'Temperature mois actuel '
                myChartTemp.update();

                myChartHum.data.datasets[0].data = moisHum;
                myChartHum.data.labels = moisLabels;
                myChartHum.data.datasets[0].label = 'Humidite mois actuel '
                myChartHum.update();

                myChartCo2.data.datasets[0].data = moisCo2;
                myChartCo2.data.labels = moisLabels;
                myChartCo2.data.datasets[0].label = 'Co2 mois actuel'
                myChartCo2.update();

            }
        }

    </script>


{% endblock %}

